<?xml version="1.0"?>
<Graphs xmlns="https://poets-project.org/schemas/virtual-graph-schema-v2">
  <GraphType id="echo">
	<Documentation>
		
	</Documentation>

    <MessageTypes>

			<MessageType id="__init__" />

      <MessageType id="msg">
				<Message>
					<Scalar name="scalar1" type="uint32_t"/>
					<Scalar name="scalar2" type="float"/>
					<Array name="array1" type="uint8_t" length="4" />
					<Tuple name="tuple1">
						<Scalar name="x" type="uint32_t"/>
						<Scalar name="y" type="float"/>
					</Tuple>
				</Message>
      </MessageType>
    </MessageTypes>
    
    <DeviceTypes>
      <DeviceType id="client">
				<Properties>
					<Scalar name="start_valid" type="int32_t" />
				</Properties>
				<State>
					<Scalar name="valid" type="int32_t" />

					<Tuple name="payload">
						<Scalar name="scalar1" type="uint32_t"/>
						<Scalar name="scalar2" type="float"/>
						<Array name="array1" type="uint8_t" length="4" />
						<Tuple name="tuple1">
							<Scalar name="x" type="uint32_t"/>
							<Scalar name="y" type="float"/>
						</Tuple>
					</Tuple>
				</State>
		
		<ReadyToSend><![CDATA[
			*readyToSend = deviceState->valid ? OUTPUT_FLAG_out : 0;
		]]></ReadyToSend>
		
		<OutputPin name="out" messageTypeId="msg">
		  <OnSend><![CDATA[
			assert(deviceState->valid);
		  message->scalar1=deviceState->payload.scalar1;
			message->scalar2=deviceState->payload.scalar2;
			for(int i=0; i<4; i++){
				message->array1[i]=deviceState->payload.array1[i];
			}
			message->tuple1.x=deviceState->payload.tuple1.x;
			message->tuple1.y=deviceState->payload.tuple1.y;
			deviceState->valid=0;
		  ]]></OnSend>
		</OutputPin>

		<InputPin name="__init__" messageTypeId="__init__" >
		<OnReceive><![CDATA[
			assert(!deviceState->valid);
			deviceState->valid=deviceProperties->start_valid;
		]]></OnReceive>
		</InputPin>

		<InputPin name="in" messageTypeId="msg" >
		<OnReceive><![CDATA[
			assert(!deviceState->valid);
			deviceState->scalar1=message->payload.scalar1;
			deviceState->scalar2=message->payload.scalar2;
			for(int i=0; i<4; i++){
				deviceState->array1[i]=message->payload.array1[i];
			}
			deviceState->tuple1.x=message->payload.tuple1.x;
			deviceState->tuple1.y=message->payload.tuple1.y;
		]]></OnReceive>
		</InputPin>
    </DeviceType>

		<ExternalType id="server">
			<InputPin name="in" messageTypeId="msg" />
			<OutputPin name="out" messageTypeId="msg" />
		</ExternalType>
		
	  </DeviceTypes>
	</GraphType>
</Graphs>

